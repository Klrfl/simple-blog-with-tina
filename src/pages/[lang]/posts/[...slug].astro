---
import Layout from "@/layouts/index.astro";
import PostLayout from "@/layouts/PostLayout.tsx";
import { langs } from "@/i18n/";
import client from "tina/__generated__/client";

export async function getStaticPaths() {
	const postsResponse = await client.queries.postConnection();
	const postsFromTina = postsResponse.data.postConnection.edges!.map((post) => {
		return {
			params: {
				relativePath: post!.node!._sys.relativePath,
			},
		};
	});

	const postsPages = await Promise.all(
		postsFromTina.map(async ({ params }) => {
			return await client.queries.post({ relativePath: params.relativePath });
		})
	);

	return langs.flatMap((lang) => {
		return postsPages
			.filter((post) => {
				const [postLang] = post.data.post._sys.breadcrumbs;
				return postLang === lang;
			})
			.map((post) => {
				const [, slug] = post.data.post._sys.breadcrumbs;

				return {
					params: { lang, slug },
					props: { tinaProps: { ...post } },
				};
			});
	});
}

const { tinaProps } = Astro.props;
---

<Layout title={tinaProps.data.post.title}>
	<PostLayout client:tina tinaProps={tinaProps} />
</Layout>
